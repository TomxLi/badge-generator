{"version":3,"sources":["config.js","util.js","Input.jsx","Output.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["services","name","url","imageUrl","title","formats","template","concat","img","default","styles","nameToKey","replace","toLowerCase","styleName","style","charAt","toUpperCase","slice","withStyles","_ref","spacing","gridItem","marginTop","unit","marginBottom","_ref2","repository","serviceSelection","badgeStyle","handleRepositoryChange","handleServiceToggle","handleStyleChange","classes","react_default","a","createElement","noValidate","autoComplete","Grid_default","container","item","xs","className","TextField_default","label","helperText","margin","fullWidth","value","onChange","sm","FormControl_default","component","FormLabel_default","map","_ref3","index","key","md","lg","FormControlLabel_default","control","Checkbox_default","checked","RadioGroup_default","aria-label","badgeStyles","Radio_default","formatUrl","urlTemplate","branch","Output","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","formatIndex","findIndex","f","handleFormatChange","event","setState","inherits","createClass","_this2","props","Fragment","Typography_default","variant","subtitle","headlineMapping","h6","badges","formattedServices","href","badge","src","alt","radioGroup","code","_ref4","format","get","_this$props","_ref5","objectWithoutProperties","objectSpread","Component","typography","lineHeight","marginRight","flexDirection","fontFamily","fontSize","overflowX","paddingBottom","App","badgeService","enabled","target","updatedSelection","toConsumableArray","_this$state","enabledServices","CssBaseline_default","h4","Paper_default","paper","src_Input","src_Output","filter","service","width","maxWidth","marginLeft","paddingRight","paddingLeft","paddingTop","Boolean","window","location","hostname","match","root","document","querySelector","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAgBaA,EAAsB,CACjC,CACEC,KAAM,eACNC,IAAK,kCACLC,SAAU,uDACVC,MAAO,gBAET,CACEH,KAAM,eACNC,IAAK,kCACLC,SAAU,uDACVC,MAAO,gBAET,CACEH,KAAM,iBACNC,IAAK,kCACLC,SAAU,yDACVC,MAAO,WAET,CACEH,KAAM,YACNC,IAAK,qCACLC,SAAU,0DACVC,MAAO,gBAET,CACEH,KAAM,WACNC,IAAK,uCACLC,SACE,oEACFC,MAAO,gBAET,CACEH,KAAM,WACNC,IAAK,6CACLC,SAAU,qDACVC,MAAO,gBAET,CACEH,KAAM,iCACNC,IAAK,8CACLC,SACE,sEACFC,MAAO,mBAET,CACEH,KAAM,mCACNC,IAAK,8CACLC,SACE,iFACFC,MAAO,mBAET,CACEH,KAAM,2BACNC,IAAK,8CACLC,SAAU,gEACVC,MAAO,kBAET,CACEH,KAAM,+BACNC,IAAK,8CACLC,SACE,sEACFC,MAAO,iBAET,CACEH,KAAM,YACNC,IAAK,sDACLC,SAAU,4DACVC,MAAO,iBAET,CACEH,KAAM,UACNC,IAAK,yDACLC,SACE,oEACFC,MAAO,iBAET,CACEH,KAAM,YACNC,IAAK,qCACLC,SAAU,mDACVC,MAAO,qBAET,CACEH,KAAM,aACNC,IAAK,wDACLC,SAAU,kEACVC,MAAO,qBAET,CACEH,KAAM,WACNC,IAAK,oCACLC,SAAU,gDACVC,MAAO,qBAET,CACEH,KAAM,iBACNC,IAAK,yDACLC,SAAU,oDACVC,MAAO,wBAET,CACEH,KAAM,kBACNC,IAAK,yDACLC,SAAU,qDACVC,MAAO,yBAET,CACEH,KAAM,YACNC,IAAK,8CACLC,SAAU,sDACVC,MAAO,yBAET,CACEH,KAAM,wBACNC,IAAK,8CACLC,SAAU,0DACVC,MAAO,eAET,CACEH,KAAM,oBACNC,IAAK,8CACLC,SAAU,sDACVC,MAAO,WAET,CACEH,KAAM,MACNC,IAAK,6CACLC,SAAU,gDACVC,MAAO,yBAET,CACEH,KAAM,cACNC,IAAK,6CACLC,SAAU,gDACVC,MAAO,WAET,CACEH,KAAM,sBACNC,IAAK,6CACLC,S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","file":"static/js/main.9518085e.chunk.js","sourcesContent":["// @flow\n\nexport type Service = {|\n  name: string,\n  title: string,\n  url: string,\n  imageUrl: string,\n  enabled?: boolean,\n|};\n\nexport type Format = {|\n  name: string,\n  template: (title: string, url: string, img: string) => string,\n  default?: boolean,\n|};\n\nexport const services: Service[] = [\n  {\n    name: 'GitHub forks',\n    url: 'https://github.com/{repository}',\n    imageUrl: 'https://img.shields.io/github/forks/{repository}.svg',\n    title: 'Build Status',\n  },\n  {\n    name: 'GitHub stars',\n    url: 'https://github.com/{repository}',\n    imageUrl: 'https://img.shields.io/github/stars/{repository}.svg',\n    title: 'Build Status',\n  },\n  {\n    name: 'GitHub license',\n    url: 'https://github.com/{repository}',\n    imageUrl: 'https://img.shields.io/github/license/{repository}.svg',\n    title: 'License',\n  },\n  {\n    name: 'Travis CI',\n    url: 'https://travis-ci.org/{repository}',\n    imageUrl: 'https://img.shields.io/travis/{repository}/{branch}.svg',\n    title: 'Build Status',\n  },\n  {\n    name: 'CircleCI',\n    url: 'https://circleci.com/gh/{repository}',\n    imageUrl:\n      'https://img.shields.io/circleci/project/{repository}/{branch}.svg',\n    title: 'Build Status',\n  },\n  {\n    name: 'CodeShip',\n    url: 'https://codeship.com/projects/{repository}',\n    imageUrl: 'https://circleci.com/gh/{repository}.svg?style=svg',\n    title: 'Build Status',\n  },\n  {\n    name: 'Code Climate (maintainability)',\n    url: 'https://codeclimate.com/github/{repository}',\n    imageUrl:\n      'https://img.shields.io/codeclimate/maintainability/{repository}.svg',\n    title: 'Maintainability',\n  },\n  {\n    name: 'Code Climate (% maintainability)',\n    url: 'https://codeclimate.com/github/{repository}',\n    imageUrl:\n      'https://img.shields.io/codeclimate/maintainability-percentage/{repository}.svg',\n    title: 'Maintainability',\n  },\n  {\n    name: 'Code Climate (tech debt)',\n    url: 'https://codeclimate.com/github/{repository}',\n    imageUrl: 'https://img.shields.io/codeclimate/tech-debt/{repository}.svg',\n    title: 'Technical Debt',\n  },\n  {\n    name: 'Code Climate (code coverage)',\n    url: 'https://codeclimate.com/github/{repository}',\n    imageUrl:\n      'https://img.shields.io/codeclimate/coverage/github/{repository}.svg',\n    title: 'Test Coverage',\n  },\n  {\n    name: 'Coveralls',\n    url: 'https://coveralls.io/r/{repository}?branch={branch}',\n    imageUrl: 'http://img.shields.io/coveralls/{repository}/{branch}.svg',\n    title: 'Test Coverage',\n  },\n  {\n    name: 'Codecov',\n    url: 'https://codecov.io/github/{repository}?branch={branch}',\n    imageUrl:\n      'https://img.shields.io/codecov/c/github/{repository}/{branch}.svg',\n    title: 'Test Coverage',\n  },\n  {\n    name: 'Gemnasium',\n    url: 'https://gemnasium.com/{repository}',\n    imageUrl: 'http://img.shields.io/gemnasium/{repository}.svg',\n    title: 'Dependency Status',\n  },\n  {\n    name: 'VersionEye',\n    url: 'https://www.versioneye.com/user/projects/{repository}',\n    imageUrl: 'https://www.versioneye.com/user/projects/{repository}/badge.svg',\n    title: 'Dependency Status',\n  },\n  {\n    name: 'David DM',\n    url: 'https://david-dm.org/{repository}',\n    imageUrl: 'https://img.shields.io/david/{repository}.svg',\n    title: 'Dependency Status',\n  },\n  {\n    name: 'David DM (dev)',\n    url: 'https://david-dm.org/{repository}#info=devDependencies',\n    imageUrl: 'https://img.shields.io/david/dev/{repository}.svg',\n    title: 'devDependency Status',\n  },\n  {\n    name: 'David DM (peer)',\n    url: 'https://david-dm.org/{repository}#info=devDependencies',\n    imageUrl: 'https://img.shields.io/david/peer/{repository}.svg',\n    title: 'peerDependency Status',\n  },\n  {\n    name: 'Packagist',\n    url: 'https://packagist.org/packages/{repository}',\n    imageUrl: 'https://img.shields.io/packagist/v/{repository}.svg',\n    title: 'Latest Stable Version',\n  },\n  {\n    name: 'Packagist PHP version',\n    url: 'https://packagist.org/packages/{repository}',\n    imageUrl: 'https://img.shields.io/packagist/php-v/{repository}.svg',\n    title: 'PHP version',\n  },\n  {\n    name: 'Packagist License',\n    url: 'https://packagist.org/packages/{repository}',\n    imageUrl: 'https://img.shields.io/packagist/l/{repository}.svg',\n    title: 'License',\n  },\n  {\n    name: 'NPM',\n    url: 'https://www.npmjs.com/package/{repository}',\n    imageUrl: 'https://img.shields.io/npm/v/{repository}.svg',\n    title: 'Latest Stable Version',\n  },\n  {\n    name: 'NPM License',\n    url: 'https://www.npmjs.com/package/{repository}',\n    imageUrl: 'https://img.shields.io/npm/l/{repository}.svg',\n    title: 'License',\n  },\n  {\n    name: 'NPM Total Downloads',\n    url: 'https://www.npmjs.com/package/{repository}',\n    imageUrl: 'https://img.shields.io/npm/dt/{repository}.svg',\n    title: 'NPM Downloads',\n  },\n  {\n    name: 'NPM Downloads per month',\n    url: 'https://www.npmjs.com/package/{repository}',\n    imageUrl: 'https://img.shields.io/npm/dm/{repository}.svg',\n    title: 'NPM Downloads',\n  },\n  {\n    name: 'Bower',\n    url: 'http://bower.io/search/?q={repository}',\n    imageUrl: 'https://img.shields.io/bower/v/{repository}.svg',\n    title: 'Latest Stable Version',\n  },\n  {\n    name: 'ESDoc',\n    url: 'https://doc.esdoc.org/github.com/{repository}/',\n    imageUrl: 'https://doc.esdoc.org/github.com/{repository}/badge.svg',\n    title: 'API Documentation',\n  },\n  {\n    name: 'Greenkeeper',\n    url: 'https://github.com/{repository}/issues?q=label%3Agreenkeeper',\n    imageUrl: 'https://badges.greenkeeper.io/{repository}.svg',\n    title: 'Greenkeeper',\n  },\n  {\n    name: 'Melpa',\n    url: 'http://melpa.org/#/{repository}/',\n    imageUrl: 'http://melpa.org/packages/{repository}-badge.svg',\n    title: 'MELPA',\n  },\n];\n\nexport const formats: Format[] = [\n  {\n    name: 'URL',\n    template: (title, url) => `${url}`,\n  },\n  {\n    name: 'Image URL',\n    template: (title, url, img) => `${img}`,\n  },\n  {\n    name: 'Markdown',\n    template: (title, url, img) => `[![${title}](${img})](${url})`,\n    default: true,\n  },\n  {\n    name: 'Org Mode',\n    template: (title, url, img) => `[[${url}][file:${img}]]`,\n  },\n  {\n    name: 'Textile',\n    template: (title, url, img) => `!${img}!:${url}`,\n  },\n  {\n    name: 'Rdoc',\n    template: (title, url, img) =>\n      `{<img src=\"${img}\" alt=\"${title}\" />}[${url}]`,\n  },\n  {\n    name: 'AsciiDoc',\n    template: (title, url, img) =>\n      `image:${img}[\"Build Status\", link=\"${url}\"]`,\n  },\n  {\n    name: 'RST',\n    template: (title, url, img) => `.. image:: ${img}\\n  :target: ${url}`,\n  },\n  {\n    name: 'Pod',\n    template: (title, url, img) =>\n      `=for HTML <a href=\"${url}\"><img src=\"${img}\"></a>`,\n  },\n];\n\nexport const styles = [\n  'default',\n  'plastic',\n  'flat-square',\n  'for-the-badge',\n  'social',\n];\n","// @flow\n\nexport type InputEvent = SyntheticInputEvent<HTMLInputElement>;\n\n/**\n * Convert a service or style name to a kebab-cased key.\n *\n * @param {string} name - A name.\n * @returns {string} The kebab-cased representation of `name`.\n */\nexport function nameToKey(name: string) {\n  return name.replace(/ /g, '-').toLowerCase();\n}\n\n/**\n * Convert a kebab-cased style to a name.\n *\n * @param {string} style - A kebab-cased style key.\n * @returns {string} The human-friendly representation of `style`.\n */\nexport function styleName(style: string) {\n  const name = style.replace(/-/g, ' ');\n  return name.charAt(0).toUpperCase() + name.slice(1);\n}\n","// @flow\n\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { services, styles as badgeStyles } from './config';\nimport { type InputEvent, nameToKey, styleName } from './util';\n\ntype InputProps = {|\n  repository: string,\n  serviceSelection: boolean[],\n  badgeStyle: string,\n  handleRepositoryChange: (event: InputEvent) => void,\n  handleServiceToggle: (index: number) => (event: InputEvent) => void,\n  handleStyleChange: (event: InputEvent, style: string) => void,\n  classes: {\n    gridItem: string,\n  },\n|};\n\n/**\n * Input styles.\n *\n * @param {Object} theme - Material UI Theme object.\n * @returns {Object} Styles object.\n */\nconst styles = ({ spacing }) => ({\n  gridItem: {\n    marginTop: 2 * spacing.unit,\n    marginBottom: 2 * spacing.unit,\n  },\n});\n\n/**\n * Input controls, including: a repository text field, a list of services checkboxes, and a radio\n * list for style.\n *\n * @param {InputProps} props - Component properties.\n * @returns {React.Element} The rendered element.\n */\nexport const Input = ({\n  repository,\n  serviceSelection,\n  badgeStyle,\n  handleRepositoryChange,\n  handleServiceToggle,\n  handleStyleChange,\n  classes,\n}: InputProps) => (\n  <form noValidate autoComplete=\"off\">\n    <Grid container>\n      <Grid item xs={12} className={classes.gridItem}>\n        <TextField\n          label=\"Repository\"\n          title=\"Repository\"\n          helperText='Ex: \"lodash\" (npm name), \"facebook/react\" (Github slug), etc.'\n          margin=\"normal\"\n          fullWidth\n          value={repository}\n          onChange={handleRepositoryChange}\n        />\n      </Grid>\n      <Grid item xs={12} sm={10} className={classes.gridItem}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Services</FormLabel>\n          <Grid container>\n            {services.map(({ name }, index) => (\n              <Grid\n                key={`service-${nameToKey(name)}`}\n                item\n                xs={12}\n                sm={6}\n                md={4}\n                lg={3}\n              >\n                <FormControlLabel\n                  label={name}\n                  title={name}\n                  control={\n                    <Checkbox\n                      checked={serviceSelection[index]}\n                      onChange={handleServiceToggle(index)}\n                      value={`${index}`}\n                    />\n                  }\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={2} className={classes.gridItem}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Style</FormLabel>\n          <RadioGroup\n            aria-label=\"Style\"\n            name=\"style\"\n            value={badgeStyle}\n            onChange={handleStyleChange}\n          >\n            {badgeStyles.map(style => (\n              <FormControlLabel\n                key={`style-${style}`}\n                value={style}\n                control={<Radio />}\n                label={styleName(style)}\n                title={styleName(style)}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n    </Grid>\n  </form>\n);\n\nexport default withStyles(styles)(Input);\n","// @flow\n\nimport React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { type Service, type Format, formats } from './config';\nimport { type InputEvent, nameToKey } from './util';\n\ntype OutputProps = {|\n  services: Service[],\n  repository: string,\n  badgeStyle: string,\n  classes: {\n    subtitle: string,\n    badges: string,\n    badge: string,\n    formats: string,\n    radioGroup: string,\n    code: string,\n  },\n|};\n\ntype OutputState = {|\n  formatIndex: number,\n|};\n\n/**\n * Output styles.\n *\n * @param {Object} theme - Material UI Theme object.\n * @returns {Object} Styles object.\n */\nconst styles = ({ spacing, typography }) => ({\n  subtitle: {\n    marginTop: 2 * spacing.unit,\n  },\n  badges: {\n    lineHeight: '20px',\n  },\n  badge: {\n    marginRight: spacing.unit / 2,\n  },\n  formats: {\n    marginTop: spacing.unit,\n  },\n  radioGroup: {\n    flexDirection: 'row',\n  },\n  code: {\n    fontFamily: 'Roboto Mono, monospace',\n    fontSize: typography.fontSize - 3,\n    lineHeight: 1.8,\n    overflowX: 'auto',\n    paddingBottom: spacing.unit,\n  },\n});\n\n/**\n * Format an URL.\n *\n * @param {string} urlTemplate - The URL template.\n * @param {string} repository - The repository.\n * @param {string} branch - The branch.\n * @returns {string} The URL template with `{repository}` and `{branch}` replaced by their value.\n */\nfunction formatUrl(urlTemplate: string, repository: string, branch: string) {\n  return urlTemplate\n    .replace('{repository}', repository)\n    .replace('{branch}', branch);\n}\n\n/**\n * Output containing the preview badges, source code, and a format switch.\n */\nexport class Output extends Component<OutputProps, OutputState> {\n  /**\n   * Component state.\n   *\n   * @type {Object}\n   */\n  state = {\n    formatIndex: formats.findIndex(f => f.default) || 0,\n  };\n\n  /**\n   * @returns {Format} The currently selected format.\n   */\n  get format(): Format {\n    const { formatIndex } = this.state;\n    return formats[formatIndex];\n  }\n\n  /**\n   * @returns {Service[]} The currently selected services.\n   */\n  get formattedServices(): Service[] {\n    const { services, repository, badgeStyle } = this.props;\n    const branch = 'master';\n    const style = badgeStyle === 'default' ? '' : `?style=${badgeStyle}`;\n    return services.map(({ url, imageUrl, ...props }) => ({\n      url: formatUrl(url, repository, branch),\n      imageUrl: `${formatUrl(imageUrl, repository, branch)}${style}`,\n      ...props,\n    }));\n  }\n\n  /**\n   * Function called whenever the format changes.\n   *\n   * @param {InputEvent} event - The <input> event.\n   * @param {string} value - The new format index.\n   * @returns {undefined} Nothing.\n   */\n  handleFormatChange = (event: InputEvent, value: string) => {\n    this.setState({ formatIndex: +value });\n  };\n\n  /**\n   * Render the component.\n   *\n   * @returns {React.Element} The rendered element.\n   */\n  render() {\n    const { classes } = this.props;\n    const { formatIndex } = this.state;\n    return (\n      <>\n        <Typography\n          variant=\"h6\"\n          className={classes.subtitle}\n          headlineMapping={{ h6: 'h2' }}\n        >\n          Preview\n        </Typography>\n        <p className={classes.badges}>\n          {this.formattedServices.map(({ name, title, url, imageUrl }) => (\n            <a\n              key={`image-${nameToKey(name)}`}\n              href={url}\n              className={classes.badge}\n              title={title}\n            >\n              <img src={imageUrl} alt={title} />\n            </a>\n          ))}\n        </p>\n        <Typography\n          variant=\"h6\"\n          className={classes.subtitle}\n          headlineMapping={{ h6: 'h2' }}\n        >\n          Source code\n        </Typography>\n        <form noValidate autoComplete=\"off\" className={classes.formats}>\n          <RadioGroup\n            aria-label=\"Format\"\n            value={`${formatIndex}`}\n            onChange={this.handleFormatChange}\n            className={classes.radioGroup}\n          >\n            {formats.map(({ name }, index) => (\n              <FormControlLabel\n                key={`format-${nameToKey(name)}`}\n                value={`${index}`}\n                control={<Radio />}\n                label={name}\n                title={name}\n              />\n            ))}\n          </RadioGroup>\n        </form>\n        <pre className={classes.code}>\n          {this.formattedServices.map(\n            ({ title, url, imageUrl }) =>\n              `${this.format.template(title, url, imageUrl)}\\n`,\n          )}\n        </pre>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Output);\n","// @flow\n\nimport React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { type Service, services, styles as badgeStyles } from './config';\nimport { type InputEvent } from './util';\nimport InputWithStyle from './Input';\nimport OutputWithStyle from './Output';\n\ntype AppProps = {|\n  classes: {\n    container: string,\n    paper: string,\n  },\n|};\n\ntype AppState = {|\n  repository: string,\n  style: string,\n  serviceSelection: boolean[],\n|};\n\n/**\n * App styles.\n *\n * @param {Object} theme - Material UI Theme object.\n * @returns {Object} Styles object.\n */\nconst styles = ({ spacing, typography }) => ({\n  container: {\n    width: '100%',\n    maxWidth: 80 * typography.fontSize,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    marginTop: 4 * spacing.unit,\n    marginBottom: 4 * spacing.unit,\n    paddingRight: 2 * spacing.unit,\n    paddingLeft: 2 * spacing.unit,\n  },\n  paper: {\n    marginTop: 4 * spacing.unit,\n    paddingTop: '1px', // prevents magin collapse\n    paddingBottom: 4 * spacing.unit,\n    paddingRight: 4 * spacing.unit,\n    paddingLeft: 4 * spacing.unit,\n  },\n});\n\n/**\n * Main application component.\n */\nexport class App extends Component<AppProps, AppState> {\n  /**\n   * Component state.\n   *\n   * @type {Object}\n   */\n  state = {\n    repository: '',\n    style: badgeStyles[0],\n    serviceSelection: services.map(badgeService => !!badgeService.enabled),\n  };\n\n  /**\n   * @returns {Service[]} All checked services.\n   */\n  get enabledServices(): Service[] {\n    const { serviceSelection } = this.state;\n    return services.filter((service, index) => serviceSelection[index]);\n  }\n\n  /**\n   * Function called whenever the repository has changed.\n   *\n   * @param {InputEvent} event - The <input> event.\n   * @returns {undefined} Nothing.\n   */\n  handleRepositoryChange = (event: InputEvent) => {\n    this.setState({ repository: event.target.value });\n  };\n\n  /**\n   * Get a function that will be called whenever the a service is checked.\n   *\n   * @param {number} index - The service index.\n   * @returns {Function} The function called whenever the service has changed.\n   */\n  handleServiceToggle = (index: number) => (event: InputEvent) => {\n    const { serviceSelection } = this.state;\n    const updatedSelection = [...serviceSelection];\n    updatedSelection[index] = event.target.checked;\n    this.setState({ serviceSelection: updatedSelection });\n  };\n\n  /**\n   * Function called whenever the style has changed.\n   *\n   * @param {InputEvent} event - The <input> event.\n   * @param {string} style - The new style.\n   * @returns {undefined} Nothing.\n   */\n  handleStyleChange = (event: InputEvent, style: string) => {\n    this.setState({ style });\n  };\n\n  /**\n   * Render the component.\n   *\n   * @returns {React.Element} The rendered element.\n   */\n  render() {\n    const { classes } = this.props;\n    const { repository, serviceSelection, style } = this.state;\n    const { enabledServices } = this;\n    return (\n      <main className={classes.container}>\n        <CssBaseline />\n        <Typography variant=\"h4\" headlineMapping={{ h4: 'h1' }}>\n          Github Badge Generator\n        </Typography>\n        <Paper className={classes.paper}>\n          <InputWithStyle\n            repository={repository}\n            serviceSelection={serviceSelection}\n            badgeStyle={style}\n            handleRepositoryChange={this.handleRepositoryChange}\n            handleServiceToggle={this.handleServiceToggle}\n            handleStyleChange={this.handleStyleChange}\n          />\n        </Paper>\n        {repository && enabledServices.length > 0 && (\n          <Paper className={classes.paper}>\n            <OutputWithStyle\n              services={enabledServices}\n              repository={repository}\n              badgeStyle={style}\n            />\n          </Paper>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","/* eslint-disable no-console, more/no-then, require-jsdoc */\n// TODO Rewrite service worker registration\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n/* eslint-enable no-console, more/no-then, require-jsdoc */\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppWithStyle from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.querySelector('#root');\nif (root !== null) {\n  ReactDOM.render(<AppWithStyle />, root);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}